name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(jq -r .version package.json)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
          echo "minor=$MINOR" >> $GITHUB_OUTPUT

      - name: Check if tag already exists on GHCR
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/your-image-name
          echo "Checking if GHCR tag $VERSION exists for $IMAGE..."
          TAG_CHECK=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" \
            https://ghcr.io/v2/${{ github.repository_owner }}/your-image-name/manifests/$VERSION)

          if echo "$TAG_CHECK" | grep -q "errors"; then
            echo "Tag $VERSION does not exist. Proceeding with build."
          else
            echo "::error::GHCR tag $VERSION already exists. Please bump the version in package.json."
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/your-image-name:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/your-image-name:${{ steps.version.outputs.major }}
            ghcr.io/${{ github.repository_owner }}/your-image-name:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/{0}/your-image-name:latest', github.repository_owner) || '' }}
