name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: subtract-admin-dashboard

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Get lowercase repository name
        id: repo
        run: echo "repo_owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(jq -r .version package.json)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
          echo "minor=$MINOR" >> $GITHUB_OUTPUT

      - name: Check if tag already exists on GHCR
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/your-image-name
          echo "Checking if GHCR tag $VERSION exists for $IMAGE..."
          TAG_CHECK=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" \
            https://ghcr.io/v2/${{ github.repository_owner }}/your-image-name/manifests/$VERSION)

          if echo "$TAG_CHECK" | grep -q "errors"; then
            echo "Tag $VERSION does not exist. Proceeding with build."
          else
            echo "::error::GHCR tag $VERSION already exists. Please bump the version in package.json."
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      - name: Set Docker tags
        id: tags
        run: |
          VERSION=${{ steps.version.outputs.version }}
          MAJOR=${{ steps.version.outputs.major }}
          MINOR=${{ steps.version.outputs.minor }}
          OWNER=${{ steps.repo.outputs.repo_owner }}
          IMAGE=ghcr.io/${OWNER}/your-image-name

          TAGS="${IMAGE}:${VERSION},${IMAGE}:${MAJOR},${IMAGE}:${MAJOR}.${MINOR}"
          
          # Optionally add 'latest' if on main
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            TAGS="${TAGS},${IMAGE}:latest"
          fi

          echo "tags=$TAGS" >> $GITHUB_OUTPUT


      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}

      - name: Generate summary
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | sed 's/,/\n/g' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
